{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.signInWithGoogleAsync = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                behaviour: \"web\",\n                androidClientId: \"361340230801-nu7s633s4a64646tkh1ahseqspb0488v.apps.googleusercontent.com\",\n                scopes: ['profile', 'email']\n              }));\n\n            case 3:\n              result = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n              return _context.abrupt(\"return\", {\n                error: true\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/spectagram-stage-4/screens/LoginScreen.js"],"names":["React","Component","LoginScreen","signInWithGoogleAsync","Google","logInAsync","behaviour","androidClientId","scopes","result","console","log","message","error","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;;IAGqBC,W;;;;;;;;;;;;;;;;UAEjBC,qB,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEKC,MAAM,CAACC,UAAP,CAAkB;AACnCC,gBAAAA,SAAS,EAAC,KADyB;AAEnCC,gBAAAA,eAAe,EAAC,0EAFmB;AAGnCC,gBAAAA,MAAM,EAAC,CAAC,SAAD,EAAW,OAAX;AAH4B,eAAlB,CAFL;;AAAA;AAEVC,cAAAA,MAFU;AAAA;AAAA;;AAAA;AAAA;AAAA;AAShBC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAEC,OAAd;AATgB,+CAUT;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAcxB,kBAAQ;AACJ,aACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAC,CAAN;AAAQC,UAAAA,cAAc,EAAC,QAAvB;AAAgCC,UAAAA,UAAU,EAAC;AAA3C,SAAb;AAAA,kBACI,KAAC,IAAD;AAAA;AAAA;AADJ,QADJ;AAKH;;;;EAtBoCf,S;;SAApBC,W","sourcesContent":["import React,{Component} from 'react'\r\nimport {Button,View} from 'react-native'\r\n\r\nexport default class LoginScreen extends Component {\r\n\r\n    signInWithGoogleAsync = async()=> {\r\n        try {\r\n            const result = await Google.logInAsync({\r\n                behaviour:\"web\",\r\n                androidClientId:\"361340230801-nu7s633s4a64646tkh1ahseqspb0488v.apps.googleusercontent.com\",\r\n                scopes:['profile','email']\r\n            });\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            return { error: true };\r\n          }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={{flex:1,justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <Text>Login</Text>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}