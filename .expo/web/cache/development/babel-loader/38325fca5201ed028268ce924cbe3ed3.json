{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PostCard = function (_Component) {\n  _inherits(PostCard, _Component);\n\n  var _super = _createSuper(PostCard);\n\n  function PostCard(props) {\n    var _this;\n\n    _classCallCheck(this, PostCard);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PostCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(TouchableOpacity, {\n        style: styles.container,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"PostScreen\", {\n            post: _this2.props.post\n          });\n        },\n        children: _jsxs(View, {\n          style: styles.cardContainer,\n          children: [_jsxs(View, {\n            style: styles.authorContainer,\n            children: [_jsx(View, {\n              style: styles.authorImageContainer,\n              children: _jsx(Image, {\n                source: require(\"../assets/profile_img.png\"),\n                style: styles.profileImage\n              })\n            }), _jsx(View, {\n              style: styles.authorNameContainer,\n              children: _jsx(Text, {\n                style: styles.authorNameText,\n                children: this.props.post.author\n              })\n            })]\n          }), _jsx(Image, {\n            source: require(\"../assets/image_1.jpg\"),\n            style: styles.postImage\n          }), _jsx(View, {\n            style: styles.captionContainer,\n            children: _jsx(Text, {\n              style: styles.captionText,\n              children: this.props.post.caption\n            })\n          }), _jsx(View, {\n            style: styles.actionContainer,\n            children: _jsxs(View, {\n              style: styles.likeButton,\n              children: [_jsx(Ionicons, {\n                name: \"heart\",\n                size: RFValue(30),\n                color: \"white\"\n              }), _jsx(Text, {\n                style: styles.likeText,\n                children: \"12k\"\n              })]\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\nexport { PostCard as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  cardContainer: {\n    margin: RFValue(13),\n    backgroundColor: \"#2a2a2a\",\n    borderRadius: RFValue(20),\n    padding: RFValue(20)\n  },\n  authorContainer: {\n    flex: 0.1,\n    flexDirection: \"row\"\n  },\n  authorImageContainer: {\n    flex: 0.15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileImage: {\n    width: \"800%\",\n    height: \"800%\",\n    resizeMode: \"contain\",\n    borderRadius: RFValue(100)\n  },\n  authorNameContainer: {\n    flex: 0.85,\n    justifyContent: \"center\"\n  },\n  authorNameText: {\n    color: \"white\",\n    fontSize: RFValue(20)\n  },\n  postImage: {\n    marginTop: RFValue(20),\n    resizeMode: \"contain\",\n    width: \"100%\",\n    alignSelf: \"center\",\n    height: RFValue(275)\n  },\n  captionContainer: {},\n  captionText: {\n    fontSize: 13,\n    color: \"white\",\n    paddingTop: RFValue(10)\n  },\n  actionContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10)\n  },\n  likeButton: {\n    width: RFValue(160),\n    height: RFValue(40),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#eb3948\",\n    borderRadius: RFValue(30)\n  },\n  likeText: {\n    color: \"white\",\n    fontSize: RFValue(25),\n    marginLeft: RFValue(5)\n  }\n});","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/spectagram-stage-4/screens/PostCard.js"],"names":["React","Component","Ionicons","RFValue","PostCard","props","state","styles","container","navigation","navigate","post","cardContainer","authorContainer","authorImageContainer","require","profileImage","authorNameContainer","authorNameText","author","postImage","captionContainer","captionText","caption","actionContainer","likeButton","likeText","StyleSheet","create","flex","margin","backgroundColor","borderRadius","padding","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","marginTop","alignSelf","paddingTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport default class PostCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    render() {\r\n        return (\r\n            <TouchableOpacity style={styles.container} onPress={() => this.props.navigation.navigate(\"PostScreen\",{ post : this.props.post})}>\r\n                <View style={styles.cardContainer}>\r\n                    <View style={styles.authorContainer}>\r\n                        <View style={styles.authorImageContainer}>\r\n                            <Image\r\n                                source={require(\"../assets/profile_img.png\")}\r\n                                style={styles.profileImage}\r\n                            ></Image>\r\n                        </View>\r\n                        <View style={styles.authorNameContainer}>\r\n                            <Text style={styles.authorNameText}>{this.props.post.author}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <Image source={require(\"../assets/image_1.jpg\")} style={styles.postImage} />\r\n                    <View style={styles.captionContainer}>\r\n                        <Text style={styles.captionText}>\r\n                            {this.props.post.caption}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={styles.actionContainer}>\r\n                        <View style={styles.likeButton}>\r\n                            <Ionicons name={\"heart\"} size={RFValue(30)} color={\"white\"} />\r\n                            <Text style={styles.likeText}>12k</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    cardContainer: {\r\n        margin: RFValue(13),\r\n        backgroundColor: \"#2a2a2a\",\r\n        borderRadius: RFValue(20),\r\n        padding: RFValue(20)\r\n    },\r\n    authorContainer: {\r\n        flex: 0.1,\r\n        flexDirection: \"row\"\r\n    },\r\n    authorImageContainer: {\r\n        flex: 0.15,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    profileImage: {\r\n        width: \"800%\",\r\n        height: \"800%\",\r\n        resizeMode: \"contain\",\r\n        borderRadius: RFValue(100)\r\n    },\r\n    authorNameContainer: {\r\n        flex: 0.85,\r\n        justifyContent: \"center\"\r\n    },\r\n    authorNameText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(20)\r\n    },\r\n    postImage: {\r\n        marginTop: RFValue(20),\r\n        resizeMode: \"contain\",\r\n        width: \"100%\",\r\n        alignSelf: \"center\",\r\n        height: RFValue(275)\r\n    },\r\n    captionContainer: {},\r\n    captionText: {\r\n        fontSize: 13,\r\n        color: \"white\",\r\n        paddingTop: RFValue(10)\r\n    },\r\n    actionContainer: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10)\r\n    },\r\n    likeButton: {\r\n        width: RFValue(160),\r\n        height: RFValue(40),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"#eb3948\",\r\n        borderRadius: RFValue(30)\r\n    },\r\n    likeText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(25),\r\n        marginLeft: RFValue(5)\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}