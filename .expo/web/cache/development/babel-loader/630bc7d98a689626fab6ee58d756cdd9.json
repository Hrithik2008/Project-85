{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from 'firebase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.checkIfLoggedIn = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this.props.navigation.navigate('DashboardScreen');\n        } else {\n          _this.props.navigation.navigate('LoginScreen');\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkIfLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(ActivityIndicator, {\n          size: \"large\"\n        })\n      });\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nexport { LoadingScreen as default };","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/spectagram-stage-4/screens/LoadingScreen.js"],"names":["React","Component","firebase","LoadingScreen","checkIfLoggedIn","auth","onAuthStateChanged","user","props","navigation","navigate","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;;IAEqBC,a;;;;;;;;;;;;;;;;UAMjBC,e,GAAkB,YAAM;AACpBF,MAAAA,QAAQ,CAACG,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAQ;AACvC,YAAGA,IAAH,EAAQ;AACJ,gBAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B;AACH,SAFD,MAEK;AACD,gBAAKF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACH;AACJ,OAND;AAOH,K;;;;;;;WAZD,6BAAmB;AACf,WAAKN,eAAL;AACH;;;WAYD,kBAAQ;AACJ,aACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACO,UAAAA,IAAI,EAAC,CAAN;AAAQC,UAAAA,cAAc,EAAC,QAAvB;AAAgCC,UAAAA,UAAU,EAAC;AAA3C,SAAb;AAAA,kBACI,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC;AAAxB;AADJ,QADJ;AAKH;;;;EAtBsCZ,S;;SAAtBE,a","sourcesContent":["import React,{Component} from 'react'\r\nimport {Text,View,ActivityIndicator} from 'react-native'\r\nimport firebase from 'firebase'\r\n\r\nexport default class LoadingScreen extends Component {\r\n\r\n    componentDidMount(){\r\n        this.checkIfLoggedIn();\r\n    }\r\n\r\n    checkIfLoggedIn = () => {\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(user){\r\n                this.props.navigation.navigate('DashboardScreen')\r\n            }else{\r\n                this.props.navigation.navigate('LoginScreen')\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={{flex:1,justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <ActivityIndicator size=\"large\"/>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}